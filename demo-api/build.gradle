plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
//{{#if (eval 'checkstyle' 'in' codeQualityTools)}}
	id 'checkstyle'
//{{/if}}
//{{#if (eval 'jacoco' 'in' codeQualityTools)}}
	id 'jacoco'
//{{/if}}
//{{#if (eval 'owasp' 'in' codeQualityTools)}}
	id 'org.owasp.dependencycheck' version '6.5.3'
//{{/if}}
//{{#if (eval 'spotbugs' 'in' codeQualityTools)}}
	id 'com.github.spotbugs' version '5.0.3'
//{{/if}}
}

group = 'com.example.demo'
version = '0.0.1-SNAPSHOT'
//{{#if (eval javaVersion '==' 11)}}
sourceCompatibility = '11'
//{{/if}}
//{{#if (eval javaVersion '!=' 11)}}
//#sourceCompatibility = '11'
//{{/if}}

def mapstructVersion = '1.4.2.Final'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	maven { url 'https://repo.spring.io/release' }
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.liquibase:liquibase-core'
//{{#if (eval authentication '==' 'keycloak-jwt')}}
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-oauth2-resource-server'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
//{{/if}}
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

//{{#if (eval sqlDatabase '==' 'postgres')}}
	runtimeOnly 'org.postgresql:postgresql'
//{{/if}}
//{{#if (eval sqlDatabase '==' 'mysql')}}
	runtimeOnly 'mysql:mysql-connector-java'
//{{/if}}
//{{#if (eval sqlDatabase '==' 'mariadb')}}
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.3'
//{{/if}}

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.assertj:assertj-core:3.19.0'
	testImplementation 'com.h2database:h2'
//{{#if (eval authentication '==' 'keycloak-jwt')}}
	testImplementation 'org.springframework.security:spring-security-test'
//{{/if}}
//{{#if (eval 'spotbugs' 'in' codeQualityTools)}}

	spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.10.1'
//{{/if}}
}

test {
	useJUnitPlatform()
//{{#if (eval 'jacoco' 'in' codeQualityTools)}}
	finalizedBy jacocoTestReport
//{{/if}}
}
//{{#if (eval 'jacoco' 'in' codeQualityTools)}}
jacocoTestReport {
	dependsOn test
}
//{{/if}}

//{{#if (eval 'checkstyle' 'in' codeQualityTools)}}
checkstyle {
	configFile = file("${rootDir}/checkstyle.xml")
}
checkstyleMain {
	source ='src/main/java'
}
checkstyleTest {
	source ='src/test/java'
}
//{{/if}}
//{{#if (eval 'spotbugs' 'in' codeQualityTools)}}
spotbugs {
	toolVersion = '4.5.2'
}
//{{/if}}

bootBuildImage {
	imageName = 'demo-api:0.0.1-SNAPSHOT'
}

{
  "name": "Spring Boot Accelerator",
  "description": "Code generator for Spring Boot that creates a basic REST api with service and repository layer and uses a database running in a container.",
  "tags": [ "java", "Spring Boot", "gradle", "docker", "JPA", "postgres", "mysql", "mariadb", "REST" ],
  "params": [
    {
      "name": "appName",
      "type": "text",
      "description": "ie: example-api",
      "label": "Application Name",
      "required": true
    },
    {
      "name": "packageName",
      "type": "text",
      "description": "ie: com.example.app",
      "required": true
    },
    {
      "name": "buildEngine",
      "type": "radios",
      "values": [
        { "key": "gradle", "label": "Gradle" },
        { "key": "mvn", "label": "Maven" }
      ],
      "defaultValue": "gradle",
      "required": true
    },
    {
      "name": "sqlDatabase",
      "type": "select",
      "defaultValue": "postgresql",
      "required": true,
      "values": [
        { "key": "postgresql", "label": "PostgreSQL"},
        { "key": "mysql", "label": "MySQL"},
        { "key": "mariadb", "label": "MariaDB"}
      ]
    }
  ],
  "preProcessing": {
    "pathReplacements": [
      { "target":  "demo-api", "replacement":  "{{appName}}"},
      { "target":  "com/example/demo", "replacement":  "{{strReplace packageName '.' '/'}}"},
      { "target":  "TodoApplication", "replacement":  "{{CamelCase appName}}Application"}
    ],
    "textReplacements": [
      { "target":  "demo-api", "replacement":  "{{appName}}"},
      { "target":  "com.example.demo", "replacement":  "{{packageName}}"},
      { "target":  "TodoApplication", "replacement":  "{{CamelCase appName}}Application"},
      { "target":  "#!#", "replacement":  ""}
    ]
  },
  "files": {
    "hello.html": {
      "condition": "false"
    },
    "demo-api/HELP.md": {
      "condition": "false"
    },
    "demo-api/gradle": {
      "condition": "buildEngine == 'gradle'",
      "static": true
    },
    "demo-api/build.gradle": {
      "condition": "buildEngine == 'gradle'"
    },
    "demo-api/gradlew": {
      "condition": "buildEngine == 'gradle'"
    },
    "demo-api/gradlew.bat": {
      "condition": "buildEngine == 'gradle'"
    },
    "demo-api/settings.gradle": {
      "condition": "buildEngine == 'gradle'"
    },
    "demo-api/pom.xml": {
      "condition": "buildEngine == 'mvn'"
    }
  }
}
